CREATE TABLE IF NOT EXISTS users
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name                VARCHAR(250) NOT NULL,
    email               VARCHAR(254) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS categories
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name                VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned              BOOLEAN,
    title               VARCHAR(50) NOT NULL

);

CREATE TABLE IF NOT EXISTS events
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation          VARCHAR(2000) NOT NULL,
    category_id         BIGINT REFERENCES categories(id),
    created_on          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    description         VARCHAR(7000) NOT NULL,
    event_date          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    initiator_id        BIGINT REFERENCES users(id),
    paid                boolean,
    participant_limit   BIGINT,
    published_on        TIMESTAMP WITHOUT TIME ZONE,
    request_moderation  boolean,
    state               VARCHAR(10) NOT NULL,
    title               VARCHAR(120) NOT NULL,
    location_lat        FLOAT NOT NULL,
    location_lon        FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS events_compilations
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id            BIGINT NOT NULL,
    compilation_id      BIGINT NOT NULL,
    CONSTRAINT key_unique PRIMARY KEY (event_id, compilation_id),
    CONSTRAINT fk_id_event FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT fk_id_compile FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requests
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    requester_id        BIGINT REFERENCES users(id),
    created             TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_id            BIGINT REFERENCES events(id),
    status              VARCHAR(10)
);